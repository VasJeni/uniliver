// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-healthy-name: 'icon-healthy';
$icon-healthy-x: 0px;
$icon-healthy-y: 64px;
$icon-healthy-offset-x: 0px;
$icon-healthy-offset-y: -64px;
$icon-healthy-width: 64px;
$icon-healthy-height: 41px;
$icon-healthy-total-width: 125px;
$icon-healthy-total-height: 105px;
$icon-healthy-image: 'sprite.png';
$icon-healthy: (0px, 64px, 0px, -64px, 64px, 41px, 125px, 105px, 'sprite.png', 'icon-healthy', );
$icon-ico-f-b-name: 'icon-icoFB';
$icon-ico-f-b-x: 110px;
$icon-ico-f-b-y: 0px;
$icon-ico-f-b-offset-x: -110px;
$icon-ico-f-b-offset-y: 0px;
$icon-ico-f-b-width: 15px;
$icon-ico-f-b-height: 30px;
$icon-ico-f-b-total-width: 125px;
$icon-ico-f-b-total-height: 105px;
$icon-ico-f-b-image: 'sprite.png';
$icon-ico-f-b: (110px, 0px, -110px, 0px, 15px, 30px, 125px, 105px, 'sprite.png', 'icon-icoFB', );
$icon-ico-twi-name: 'icon-icoTwi';
$icon-ico-twi-x: 64px;
$icon-ico-twi-y: 64px;
$icon-ico-twi-offset-x: -64px;
$icon-ico-twi-offset-y: -64px;
$icon-ico-twi-width: 40px;
$icon-ico-twi-height: 33px;
$icon-ico-twi-total-width: 125px;
$icon-ico-twi-total-height: 105px;
$icon-ico-twi-image: 'sprite.png';
$icon-ico-twi: (64px, 64px, -64px, -64px, 40px, 33px, 125px, 105px, 'sprite.png', 'icon-icoTwi', );
$icon-insurance-name: 'icon-insurance';
$icon-insurance-x: 0px;
$icon-insurance-y: 0px;
$icon-insurance-offset-x: 0px;
$icon-insurance-offset-y: 0px;
$icon-insurance-width: 56px;
$icon-insurance-height: 64px;
$icon-insurance-total-width: 125px;
$icon-insurance-total-height: 105px;
$icon-insurance-image: 'sprite.png';
$icon-insurance: (0px, 0px, 0px, 0px, 56px, 64px, 125px, 105px, 'sprite.png', 'icon-insurance', );
$icon-stairs-name: 'icon-stairs';
$icon-stairs-x: 56px;
$icon-stairs-y: 0px;
$icon-stairs-offset-x: -56px;
$icon-stairs-offset-y: 0px;
$icon-stairs-width: 54px;
$icon-stairs-height: 60px;
$icon-stairs-total-width: 125px;
$icon-stairs-total-height: 105px;
$icon-stairs-image: 'sprite.png';
$icon-stairs: (56px, 0px, -56px, 0px, 54px, 60px, 125px, 105px, 'sprite.png', 'icon-stairs', );
$spritesheet-width: 125px;
$spritesheet-height: 105px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($icon-healthy, $icon-ico-f-b, $icon-ico-twi, $icon-insurance, $icon-stairs, );
$spritesheet: (125px, 105px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
